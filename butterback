#! /usr/bin/python3

# Copyright Â© 2015-2020 Vladimir Olteanu <vl.olteanu@gmail.com>
# This program is free software. It comes without any warranty, to
# the extent permitted by applicable law. You can redistribute it
# and/or modify it under the terms of the Do What The Fuck You Want
# To Public License, Version 2, as published by Sam Hocevar. See
# the COPYING file for more details.

import os
import sys
import getopt
import subprocess

def exec(cmd):
 	subprocess.run(cmd, check = True)

def date():
	DATE_FMT = "%Y-%m-%d-%T"
	
	raw_date = subprocess.check_output(['date', '+' + DATE_FMT])
	raw_date = raw_date[:len(raw_date) - 1] #strip \n
	return raw_date.decode("utf-8")

class Host:
	def backup(self, name, root, source):
		if (not self.is_dir(root)):
			self.run(['mkdir', 'root'])
		if (not self.is_dir(root + '/' + name)):
			self.run(['mkdir', 'root' + '/' + 'name'])
		
		current_path = root + '/' + name + '/current'
		if (not self.is_dir(root + '/' + name + '/current')):
			self.run(['sudo', 'btrfs',  'subvolume',  'create', root + '/' + name + '/current'])
		
		exec(['rsync',  '-a',  '--delete',  '--progress', source, self.rsync_pref() + current_path])
	
		snap_path = root + '/' + name + '/' + date()
		self.run(['sudo', 'btrfs', 'subvolume', 'snapshot', current_path, snap_path])
		
class LocalHost(Host):
	def run(self, cmd):
		exec(cmd)
	
	def is_dir(self, path):
		return os.path.isdir(path)
	
	def rsync_pref(self):
		return ''

class RemoteHost(Host):
	def __init__(self, user, passwd):
		self.user = user
		self.passwd = passwd
	
	def run(self, cmd):
		exec(['ssh', self.user + '@' + self.passwd] + cmd)
	
	def is_dir(self, path):
		try:
			self.run(['[ -d "{}" ]'.format(self.path)])
		except:
			return False
		return True
		
	def rsync_pref(self):
		return self.user + '@' + self.passwd + ':'

def main(argv):
	if (len(argv) == 0):
		for i in os.listdir('/etc/butterback/targets'):
			LocalHost().backup(i, '/etc/butterback/root/', '/etc/butterback/targets/{}/'.format(i))
	elif (len(argv) == 3):
		LocalHost().backup(argv[0], argv[1], argv[2])

if __name__ == "__main__":
	main(sys.argv[1:])

print('Done')
